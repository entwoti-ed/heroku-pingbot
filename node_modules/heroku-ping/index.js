var logger = require("./lib/logger"),
    _ = require("underscore"),
    async = require("async"),
    request = require("request");
    
exports.ping = function(options) {
  if ( !_.isArray(options.apps) || _.find(options.arr, function(a) { return !_.isObject(a) || a.name === undefined; }) ) {
    logger.error("Go read the manual");
    return;
  }
  var pingall = function() {
    var tasks = options.apps.map(function(app) {
      var url = (app.secure ? "https://" : "http://") +
                app.name + ".herokuapp.com" +
                (app.port ? ":" + app.port : "") + 
                (app.path || "");

      return function() {
        (options.silent !== true) && logger.info("Ping: "+ url);
        request(url, function (error, response, body) {
          if (options.silent !== true) {
            if (!error && response.statusCode == 200) {
              logger.info("Pong: " + url)
            } else {
              logger.error("Error: " + url + " : " + error || response.statusCode);
            }
          }
        })
      }
    });
    async.parallel(tasks);


  }
  pingall();
  setInterval(pingall, options.interval || 1800000)

}
